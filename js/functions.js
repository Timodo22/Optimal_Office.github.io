function jumpUrl(url){	if(url != ''){				window.location = url;				// Create url		// Redirect to url		}}function scrollAnchor(){		$('html, body').animate({scrollTop: $('#calendar').offset().top-50}, 500);		}function checkEmail(email) {    var re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;    return re.test(email);}// ********************* FUNCTIONS FOR DATE CHECK *************************///** * DHTML date validation script for dd/mm/yyyy. Courtesy of SmartWebby.com (http://www.smartwebby.com/dhtml/) */// Declaring valid date character, minimum year and maximum yearvar dtCh= "-";var minYear=1900;var maxYear=2100;function isInteger(s){	var i;    for (i = 0; i < s.length; i++){           // Check that current character is number.        var c = s.charAt(i);        if (((c < "0") || (c > "9"))) return false;    }    // All characters are numbers.    return true;}function stripCharsInBag(s, bag){	var i;    var returnString = "";    // Search through string's characters one by one.    // If character is not in bag, append to returnString.    for (i = 0; i < s.length; i++){           var c = s.charAt(i);        if (bag.indexOf(c) == -1) returnString += c;    }    return returnString;}function daysInFebruary (year){	// February has 29 days in any year evenly divisible by four,    // EXCEPT for centurial years which are not also divisible by 400.    return (((year % 4 == 0) && ( (!(year % 100 == 0)) || (year % 400 == 0))) ? 29 : 28 );}function DaysArray(n) {	for (var i = 1; i <= n; i++) {		this[i] = 31		if (i==4 || i==6 || i==9 || i==11) {this[i] = 30}		if (i==2) {this[i] = 29}   }    return this}function checkDate(dtStr){		var daysInMonth = DaysArray(12)	var pos1=dtStr.indexOf(dtCh)	var pos2=dtStr.indexOf(dtCh,pos1+1)	var strDay=dtStr.substring(0,pos1)	var strMonth=dtStr.substring(pos1+1,pos2)	var strYear=dtStr.substring(pos2+1)	strYr=strYear	if (strDay.charAt(0)=="0" && strDay.length>1) strDay=strDay.substring(1)	if (strMonth.charAt(0)=="0" && strMonth.length>1) strMonth=strMonth.substring(1)	for (var i = 1; i <= 3; i++) {		if (strYr.charAt(0)=="0" && strYr.length>1) strYr=strYr.substring(1)	}	month=parseInt(strMonth)	day=parseInt(strDay)	year=parseInt(strYr)	if (pos1==-1 || pos2==-1){			return false	}	if (strMonth.length<1 || month<1 || month>12){		return false	}	if (strDay.length<1 || day<1 || day>31 || (month==2 && day>daysInFebruary(year)) || day > daysInMonth[month]){		return false	}	if (strYear.length != 4 || year==0 || year<minYear || year>maxYear){			return false	}	if (dtStr.indexOf(dtCh,pos2+1)!=-1 || isInteger(stripCharsInBag(dtStr, dtCh))==false){		return false	}return true}function isJPG(ext) {  ext = ext.substring(ext.length-3,ext.length);  ext = ext.toLowerCase();  if(ext != 'jpg') {        return false; }  else    return true; }function validCharacters(entry,validChar){			strlen=entry.length;   			// Now scan for illegal characters			for(idx=0;idx<strlen;idx++) {			  if(validChar.indexOf(entry.charAt(idx))<0) {			    return false;				}			 }			return true;	}		function number_format (number, decimals, dec_point, thousands_sep) {		if (number % 1 === 0) return number;	    // Strip all characters but numerical ones.	    number = (number + '').replace(/[^0-9+\-Ee.]/g, '');	    var n = !isFinite(+number) ? 0 : +number,	        prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),	        sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,	        dec = (typeof dec_point === 'undefined') ? '.' : dec_point,	        s = '',	        toFixedFix = function (n, prec) {	            var k = Math.pow(10, prec);	            return '' + Math.round(n * k) / k;	        };	    // Fix for IE parseFloat(0.55).toFixed(0) = 0;	    s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');	    if (s[0].length > 3) {	        s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);	    }	    if ((s[1] || '').length < prec) {	        s[1] = s[1] || '';	        s[1] += new Array(prec - s[1].length + 1).join('0');	    }	    return s.join(dec);	}		function formatPrice(price) {	if (price>0) {		formatted = "&euro;&nbsp;" + number_format(price,2,",",".");		if  (price % 1 === 0) formatted = formatted + ",-";		return formatted;	}	else return "n.v.t.";}function formatTime(timestamp) {	if (timestamp>0) {	    var sec_num = parseInt(timestamp, 10); // don't forget the second param	    var hours   = Math.floor(sec_num / 3600);	    var minutes = Math.floor((sec_num - (hours * 3600)) / 60);	    var seconds = sec_num - (hours * 3600) - (minutes * 60);	    if (hours   < 10) {hours   = "0"+hours;}	    if (minutes < 10) {minutes = "0"+minutes;}	    if (seconds < 10) {seconds = "0"+seconds;}	    var time    = hours+':'+minutes+':'+seconds;	    return time;	} else return "n.v.t.";}// Sets GoogleAnalytics goalfunction triggerGoal(category,action,label) {	return true;	// Check loaded?	if (typeof ga == 'function') {				if (category,action,label) ga('send','event',category,action,label);		else if (category,action) ga('send','event',category,action);		else if (category) ga('send','event',category);		else ga('send','event');		console.log('GA goal triggered..');	}	else alert('Analytics not loaded...');		gtag('event', 'conversion', {	      'send_to': 'AW-622725418/u684CKjH-tQCEKqS-KgC'//	      'event_callback': callback	  });}function gtag_report_conversion(output) {	return true;  if (typeof gtag !== 'undefined') {	  gtag('event', 'conversion', {	      'send_to': 'AW-622725418/'+output,	  }); 	 return true; } else { console.log('Failed to execute conversion of '+output+': gtag() not loaded');}}$(function(){	/* Function for shaking elements, 	mosstly used for error form animation feedback */			// Add css		var css = document.createElement("style");	css.type = "text/css";	css.innerHTML = ".shake { animation: shake 0.82s cubic-bezier(.36,.07,.19,.97) both; transform: translate3d(0, 0, 0);backface-visibility: hidden;perspective: 1000px;} @keyframes shake { 10%, 90% {transform: translate3d(-1px, 0, 0);} 20%, 80% {transform: translate3d(2px, 0, 0);} 30%, 50%, 70% { transform: translate3d(-4px, 0, 0);}40%, 60% { transform: translate3d(4px, 0, 0);}}";	document.body.appendChild(css);	// Extend Jquery	jQuery.fn.shake = function() {		    var o = $(this[0]) 		o.addClass('shake');		setTimeout(function() { o.removeClass('shake');}, 1000);		    return this; // This is needed so others can keep chaining off of this	};					/***************************************	Fast page loading	***************************************/	// Change body content to given url	function changeContent(url) {		// Loading animation...		//$(".logo").removeClass('spin').delay(50).queue(function (next) {$(this).addClass('spin');next();});		console.log('Ajax!');				$.get( url, function( data ) {									$('.navbar-toggle').click();									//$('body').hide();			var bodyHtml = /<body.*?>([\s\S]*)<\/body>/.exec(data)[1];			var title = /<title.*?>([\s\S]*)<\/title>/.exec(data)[1];						$('title').html(title);						$('body').html(bodyHtml);						//$('#preloader').remove(); 									window.scrollTo(0, 0);			//$('body').fadeIn(200);						// Tell Google Analytics			if (window.ga && ga.loaded) {			//if (typeof ga !== 'undefined') {				ga('set', 'page', window.location.pathname);				ga('send', 'pageview');			}		});	}		// If pushState support..	if (ajaxRequests==true && history.pushState) {		// Highjack all A-clicks		$(document).on('click', "a[href^='/']", function (event){			var url = $(this).attr('href').replace(/\/$/, "");			if (!$(this).hasClass('disableAjax')) {				window.history.pushState({scrollTop:document.body.scrollTop}, null, url);				changeContent(url);										event.preventDefault();				return false;			} else { return true;}				});				// Fix back/forward button		window.onpopstate = function (event) {//			console.log(event);//			if (event.state) {} //			else {				changeContent(location.href);				event.preventDefault();				return false;//			}		}				}		});